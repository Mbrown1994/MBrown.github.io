g + geom_bar((aes(fill = as.factor(y))), position = "dodge") + labs(x = "Female Crab Color") + theme(legend.title = element_blank()) + coord_flip()
g <- ggplot(data=Crabs2, aes(x = spine))
g + geom_bar((aes(fill = as.factor(y))), position = "dodge") + labs(x = "Female Crab Spine Condition") + theme(legend.title = element_blank()) + coord_flip()
g <- ggplot(data=Crabs2, aes(x = spine))
g + geom_bar((aes(fill = as.factor(color))), position = "dodge") + labs(x = "Female Crab Spine Condition") + theme(legend.title = element_blank()) + coord_flip()
g <- ggplot(data=Crabs2, aes(x = spine))
g + geom_bar((aes(fill = as.factor(y)))) + labs(x = "Female Crab Spine Condition") + theme(legend.title = element_blank()) + coord_flip()
g <- ggplot(data=Crabs2, aes(x = spine))
g + geom_bar((aes(fill = as.factor(y))), position = "dodge") + labs(x = "Female Crab Spine Condition") + theme(legend.title = element_blank()) + coord_flip()
g <- ggplot(data=Crabs2, aes(x = spine))
g + geom_bar((aes(fill = as.factor(y))), position = "dodge") + labs(x = "Female Crab Spine Condition") + theme(legend.title = element_blank())
g <- ggplot(data=Crabs2, aes(x = spine))
g + geom_bar((aes(fill = as.factor(spine))), position = "dodge") + labs(x = "Female Crab Spine Condition") + theme(legend.title = element_blank())
g <- ggplot(data=Crabs2, aes(x = spine))
g + geom_bar((aes(fill = as.factor(y))), position = "dodge") + labs(x = "Female Crab Spine Condition") + theme(legend.title = element_blank())
g <- ggplot(data=Crabs2, aes(x = color))
g + geom_bar((aes(fill = as.factor(y))), position = "dodge") + labs(x = "Female Crab Spine Condition") + theme(legend.title = element_blank())
g <- ggplot(data=Crabs2, aes(x = color))
g + geom_bar((aes(fill = as.factor(y))), position = "dodge") + labs(x = "Female Crab Spine Condition") + theme(legend.title = element_blank()) + facet_grid(~spine)
g <- ggplot(data=Crabs2, aes(x = color))
g + geom_bar((aes(fill = as.factor(y))), position = "dodge") + labs(x = "Female Crab Spine Condition") + theme(legend.title = element_blank()) + facet_grid(~spine) + theme(axis.text.x = element_text(angle=90))
g <- ggplot(data=Crabs2, aes(x = color))
g + geom_bar((aes(fill = as.factor(y))), position = "dodge") + labs(x = "Female Crab Spine Condition") + theme(legend.title = element_blank()) + facet_grid(~spine) + theme(axis.text.x = element_text(angle=45))
Crabs2 %>% group_by(color,y) %>%
summarize(avg = mean(color))
Crabs2 %>% group_by(color,y) %>%
summarize(avg = mean("color"))
Crabs2 %>% group_by(color,y) %>%
summarize(avg = mean("satell"))
g <- ggplot(data=Crabs2, aes(x = y))
g + geom_boxplot((aes(fill = as.factor(weight)))) + labs(x = "y", y = "width") + theme(legend.title = y) + ggtitle("Boxplot for Weight")
g <- ggplot(data=Crabs2, aes(x = y))
g + geom_boxplot((aes(fill = as.factor(weight)))) + labs(title = "Boxplot for Weight") + xlab("y") + ylab("weight") + theme(legend.title = y)
g <- ggplot(data=Crabs2, aes(x = y))
g + geom_boxplot((aes(fill = as.factor(weight)))) + labs(title = "Boxplot for Weight") + xlab("y") + ylab("weight") + theme(legend.title = "y")
g <- ggplot(data=Crabs2, aes(x = y))
g + geom_boxplot((aes(fill = as.factor(weight)))) + labs(title = "Boxplot for Weight") + xlab("y") + ylab("weight") + theme(legend.title = element_text(y))
g <- ggplot(data=Crabs2, aes(x = y))
g + geom_boxplot((aes(fill = as.factor(weight)))) + labs(title = "Boxplot for Weight") + xlab("y") + ylab("weight") + theme(legend.title = element_text("y"))
g<-ggplot(data = Crabs2, aes(x=y))
g<-ggplot(data = Crabs2, aes(x=y))
g+geom_boxplot((aes(fill = as.factor(weight))))
g<-ggplot(data = Crabs2, aes(x=y))
g+geom_dotplot((aes(fill = as.factor(weight))))
g<-ggplot(data = Crabs2, aes(x=y))
g+geom_dotplot(binaxis = 'y', stackdir = 'center', dotsize = 1)
g<-ggplot(data = Crabs2, aes(x = y, y = weight))
g+geom_boxplot(fill = "grey") + aes(group = y)
g<-ggplot(data = Crabs2, aes(x = y, y = weight))
g+geom_dotplot(fill = "grey") + aes(group = y)
Crabs2 %>% group_by(color,y) %>%
summary(digits=1)
Crabs2 %>% group_by(color,y) %>%
summarise(
avg = mean(color$y, na.rm = TRUE)
)
View(Crabs2)
Crabs2 %>% group_by(color,y) %>% summarize(avg = mean(color$y), sd(color$y), median(color$y), IQR(color$y))
Crabs2 %>% group_by(color,y) %>% summarise(avg = mean(weight), Sd(weight), median(weight), IQR(weight))
Crabs2 %>% group_by(color,y) %>% summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight))
Crabs2 %>% group_by(color,y) %>% summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight), digits=getOption(0)
Crabs2 %>% group_by(color,y) %>% summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight), digits=getOption(0))
Crabs2 %>% group_by(color,y) %>% summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight), digits=getOption(0))
Crabs2 %>% group_by(color,y) %>% summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight), digits=getOption(4))
Crabs2 %>% group_by(color,y) %>% summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight), digits=4)
Crabs2 %>% group_by(color,y) %>% summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight), digits=0)
Crabs2 %>% group_by(color,y) %>% summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)) %>% round(0)
Crabs2 %>% group_by(color,y) %>% summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight))
Crabs2 %>% group_by(color,y) %>% round(summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight), 0))
Crabs2 %>% group_by(color,y) %>% round(summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight), 0))
Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean('weight'), sd('weight'), median('weight'), IQR('weight')))
Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
Crabs2
Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
library(readr)
Crabs<-read.table("crabs.txt", header = TRUE)
Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
library(dplyr)
Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
View(Crabs)
library(readr)
Crabs<-read.table("crabs.txt", header = TRUE)
Crabs2<- Crabs %>% mutate(color = if_else(color==2, "light", if_else(color==3, "medium", if_else(color==4, "dark", "darker")))) %>% mutate(spine = if_else(spine==1, "Both Good", if_else(spine==2, "One worn/Broken", "Both worn/Broken"))) %>% mutate(y = if_else(y==1, "At least 1 sattelite", "No Satellite"))
Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
View(Crabs2)
table(Crabs2$y, Crabs2$spine, Crabs2$color)
tab<-table(Crabs2$y,Crabs2$spine,Crabs2$color)
str(tab)
tab[ , ,2]
g <- ggplot(data=Crabs2, aes(x = color))
library(ggplot2)
g <- ggplot(data=Crabs2, aes(x = color))
g + geom_bar((aes(fill = as.factor(y))), position = "dodge") + labs(x = "Female Crab Color") + theme(legend.title = element_blank()) + coord_flip()
g <- ggplot(data=Crabs2, aes(x = spine))
g + geom_bar((aes(fill = as.factor(y))), position = "dodge") + labs(x = "Female Crab Spine Condition") + theme(legend.title = element_blank()) + coord_flip()
g <- ggplot(data=Crabs2, aes(x = spine))
g + geom_bar((aes(fill = as.factor(color))), position = "dodge") + labs(x = "Female Crab Spine Condition") + theme(legend.title = element_blank()) + coord_flip()
g <- ggplot(data=Crabs2, aes(x = color))
g + geom_bar((aes(fill = as.factor(y))), position = "dodge") + labs(x = "Female Crab Spine Condition") + theme(legend.title = element_blank()) + facet_grid(~spine) + theme(axis.text.x = element_text(angle=45))
Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
library(readr)
Crabs<-read.table("crabs.txt", header = TRUE)
setwd("~/Desktop/R Programming/iCloud Drive (Archive)/Homework 5")
library(readr)
Crabs<-read.table("crabs.txt", header = TRUE)
Crabs2<- Crabs %>% mutate(color = if_else(color==2, "light", if_else(color==3, "medium", if_else(color==4, "dark", "darker")))) %>% mutate(spine = if_else(spine==1, "Both Good", if_else(spine==2, "One worn/Broken", "Both worn/Broken"))) %>% mutate(y = if_else(y==1, "At least 1 sattelite", "No Satellite"))
Crabs2<- Crabs %>% mutate(color = if_else(color==2, "light", if_else(color==3, "medium", if_else(color==4, "dark", "darker")))) %>% mutate(spine = if_else(spine==1, "Both Good", if_else(spine==2, "One worn/Broken", "Both worn/Broken"))) %>% mutate(y = if_else(y==1, "At least 1 sattelite", "No Satellite"))
Crabs<-read.table("crabs.txt", header = TRUE)
Crabs2<- Crabs %>% mutate(color = if_else(color==2, "light", if_else(color==3, "medium", if_else(color==4, "dark", "darker")))) %>% mutate(spine = if_else(spine==1, "Both Good", if_else(spine==2, "One worn/Broken", "Both worn/Broken"))) %>% mutate(y = if_else(y==1, "At least 1 sattelite", "No Satellite"))
Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
View(Crabs2)
Numerical<-Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
6. Recreate the summary statistics and write text explaining one of the sets of summary stats.
```{r, echo=FALSE}
Numerical<-Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
```
library(operators)
library(magrittr)
install.packages("magrittr")
6. Recreate the summary statistics and write text explaining one of the sets of summary stats.
```{r, echo=FALSE}
Numerical<-Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
```
Numerical<-Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
library(magrittr)
Numerical<-Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
library(dplyr)
Numerical<-Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
Numerical<-Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
library(tidyverse)
Numerical<-Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
Crabs2 %>% group_by(color,y) %>% (summarise(avg = mean(weight), sd(weight), median(weight), IQR(weight)))
Crabs2 %>% group_by(color,y) %>% (summarise(avg=mean(weight), sd(weight), median(weight), IQR(weight)))
Crabs2 %>% group_by(color,y) %>% (summarise(avg=mean(weight), sd(weight), median(weight), IQR(weight)))
library(readr)
Crabs<-read.table("crabs.txt", header = TRUE)
Crabs2<- Crabs %>% mutate(color = if_else(color==2, "light", if_else(color==3, "medium", if_else(color==4, "dark", "darker")))) %>% mutate(spine = if_else(spine==1, "Both Good", if_else(spine==2, "One worn/Broken", "Both worn/Broken"))) %>% mutate(y = if_else(y==1, "At least 1 sattelite", "No Satellite"))
Crabs2 %>% group_by(color,y) %>% (summarise(avg=mean(weight), sd(weight), median(weight), IQR(weight)))
Rename <- Crabs2 %>% group_by(color,y) %>% (summarise(avg=mean(weight), sd(weight), median(weight), IQR(weight)))
Crabs2 %>% group_by(color,y) %>% (summarize(avg=mean(weight), sd(weight), median(weight), IQR(weight)))
Crabs2 %>% group_by(color,y) %>% (summarize(avg=mean("weight"), sd("weight"), median("weight"), IQR("weight")))
Crabs2 %>% group_by(color,y) %>% (summarise(avg=mean("weight"), sd("weight"), median("weight"), IQR("weight")))
Crabs2 %>% group_by(color,y) %>% (summarise (avg=mean("weight"), sd("weight"), median("weight"), IQR("weight")))
Crabs2 %>% group_by(color,y) %>% (summarise (avg=mean(weight), sd(weight), median(weight), IQR(weight)))
library(readr)
Crabs<-read.table("crabs.txt", header = TRUE)
Crabs2<- Crabs %>% mutate(color = if_else(color==2, "light", if_else(color==3, "medium", if_else(color==4, "dark", "darker")))) %>% mutate(spine = if_else(spine==1, "Both Good", if_else(spine==2, "One worn/Broken", "Both worn/Broken"))) %>% mutate(y = if_else(y==1, "At least 1 sattelite", "No Satellite"))
Crabs2 %>% group_by(color,y) %>% (summarise (avg=mean(weight), sd(weight), median(weight), IQR(weight)))
Crabs2 %>% (group_by(color,y)(summarise (avg=mean(weight), sd(weight), median(weight), IQR(weight))))
Crabs2 %>% group_by(color,y) %>% (summarise (avg=mean(weight), sd(weight), median(weight), IQR(weight)))
View(Crabs2)
Crabs2 %>% group_by(color,y) %>% summarise (avg=mean(weight), sd(weight), median(weight), IQR(weight))
Crabs2 %>% group_by(color,y) %>% summarise(avg=mean(weight), sd(weight), median(weight), IQR(weight))
f <- ggplot(data=Crabs2, x = y)
f + geom_boxplot()
f <- ggplot(data=Crabs2, x = y)
f <- ggplot(data=Crabs2, x = y, aes(fill(weight)))
f + geom_boxplot()
f <- ggplot(data=Crabs2, x = y, aes(fill(weight,y)))
f + geom_boxplot()
f <- ggplot(data=Crabs2, x = y, aes(fill("weight","y")))
f + geom_boxplot()
g <- ggplot(Crabs2, aes(x=weight, y=width))
g <- ggplot(Crabs2, aes(x=weight, y=width)) + geom_point() + geom_smooth(method=lm)
geom_point() + geom_smooth(method=lm)
g <- ggplot(Crabs2, aes(x=weight, y=width))
g + geom_point() + geom_smooth(method=lm)
g <- ggplot(Crabs2, aes(x=weight, y=width, shape=cyl, color=cyl))
g + geom_point() + geom_smooth(method=lm)
g <- ggplot(Crabs2, aes(x=weight, y=width, shape=color, color=color))
g + geom_point() + geom_smooth(method=lm)
g <- ggplot(Crabs2, aes(x=weight, y=width, shape=color, color=color))
g + geom_point() + geom_smooth(method=lm, color=blue)
g <- ggplot(Crabs2, aes(x=weight, y=width, shape=color, color=color))
g + geom_point() + geom_smooth(method=lm, color="blue")
g <- ggplot(Crabs2, aes(x=weight, y=width, shape=circle, color=color))
g + geom_point() + geom_smooth(method=lm, color="blue")
g <- ggplot(Crabs2, aes(x=weight, y=width, shape="circle", color=color))
g + geom_point() + geom_smooth(method=lm, color="blue")
g <- ggplot(Crabs2, aes(x=weight, y=width, y="No Satellite", "At least 1 Sattelite"))
g <- ggplot(Crabs2, aes(x=weight, y=width)
g + geom_point() + geom_smooth(method=lm, color="blue")
g<-ggplot(Crabs2, aes(x=weight, y=width))
g + geom_point() + geom_smooth(method=lm, color="blue")
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color))
g + geom_point() + geom_smooth(method=lm, color="blue") + aes()
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color, y="No Satellite", "At least 1 Sattelite"))
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color))
g + geom_point() + geom_smooth(method=lm, color="blue")
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color))
g + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle(Weight vs Width)
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color))
g + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color))
g + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width") + aes(y="No Satellite", "At least 1 Sattelite")
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color))
g + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color))
g + geom_point() + geom_smooth() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color))
g + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color))
g + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width") + facet_wrap(y)
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color))
g + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width") + facet_wrap("y")
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color))
g + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width") + facet_grid("y")
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color))
g + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
g <- ggplot(Crabs2, aes(x = y, y = weight))
g + geom_boxplot(fill = "grey")
g <- ggplot(Crabs2, aes(x = y, y = weight))
g + geom_boxplot(fill = "grey") + aes(fill=as.factor(weight))
g <- ggplot(Crabs2, aes(x = y, y = weight))
g + geom_boxplot(fill = "grey") + aes(fill=as.factor(weight)) + (geom_point(position = position_jitterdodge(jitter.width = 0, dodge.width = 0.3)))
g <- ggplot(Crabs2, aes(x = y, y = weight))
g + geom_boxplot(fill = "grey") + aes(fill=as.factor(weight)) + (geom_point(position = position_jitterdodge))
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color))
g + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width") + geom_jitter()
g <- ggplot(Crabs2, aes(x = y, y = weight))
g + geom_boxplot(fill = "grey") + aes(fill=as.factor(weight)) + geom_jitter()
g <- ggplot(Crabs2, aes(x = y, y = weight))
g + geom_boxplot(fill = "grey") + aes(fill=as.factor(weight)) + geom_jitter(aes(fill=as.factor(y)))
g <- ggplot(Crabs2, aes(x = y, y = weight))
g + geom_boxplot(fill = "grey") + aes(fill=as.factor(weight)) + theme(legend.title = element_blank(y)) geom_jitter(aes(fill=as.factor(y)))
g <- ggplot(Crabs2, aes(x = y, y = weight))
g + geom_boxplot(fill = "grey") + aes(fill=as.factor(weight)) + theme(legend.title = element_blank(y)) + geom_jitter(aes(fill=as.factor(y)))
g <- ggplot(Crabs2, aes(x = y, y = weight))
g + geom_boxplot(fill = "grey") + aes(fill=as.factor(weight)) + theme(legend.title = y) + geom_jitter(aes(fill=as.factor(y)))
g <- ggplot(Crabs2, aes(x = y, y = weight))
g + geom_boxplot(fill = "grey") + aes(fill=as.factor(weight)) + geom_jitter(aes(fill=as.factor(y)))
g <- ggplot(Crabs2, aes(x = y, y = weight, color = y))
g + geom_boxplot(fill = "grey") + aes(fill=as.factor(weight)) + geom_jitter(aes(fill=as.factor(y)))
g <- ggplot(Crabs2, aes(x = y, y = weight, color = y))
g + geom_boxplot(fill = "grey") + geom_jitter(aes(fill=as.factor(y)))
g <- ggplot(Crabs2, aes(x = y, y = weight, color = y))
g + geom_boxplot(fill = "grey") + geom_jitter(aes(fill=(y)))
g <- ggplot(Crabs2, aes(x = y, y = weight))
g + geom_boxplot(fill = "grey") + geom_jitter(aes(color=(y)))
g <- ggplot(Crabs2, aes(x = y, y = weight))
g + geom_boxplot(fill = "white") + geom_jitter(aes(color=(y)))
g <- ggplot(Crabs2, aes(x = y, y = width))
g + geom_boxplot(fill = "white") + geom_jitter(aes(color=(y)))
g <- ggplot(Crabs2, aes(x = y, y = width))
g + geom_boxplot(fill = "white") + geom_jitter(aes(color=(y))) + ggtitle("Boxplot for Width")
g <- ggplot(Crabs2, aes(x = y, y = weight))
g + geom_boxplot(fill = "white") + geom_jitter(aes(color=(y))) + ggtitle("Boxplot for Weight")
library(readr)
library(dplyr)
library(knitr)
library(magrittr)
Crabs<-read.table("crabs.txt", header = TRUE)
library(ggplot2)
g <- ggplot(data=Crabs2, aes(x = color))
g + geom_bar((aes(fill = as.factor(y))), position = "dodge") + labs(x = "Female Crab Color") + theme(legend.title = element_blank()) + coord_flip()
g <- ggplot(data=Crabs2, aes(x = spine))
g + geom_bar((aes(fill = as.factor(y))), position = "dodge") + labs(x = "Female Crab Spine Condition") + theme(legend.title = element_blank()) + coord_flip()
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color))
g + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
Crabs2 %>% group_by(color,y) %>% summarise(round(avg=mean(weight), sd(weight), median(weight), IQR(weight)))
Crabs2 %>% group_by(color,y) %>% summarise(round(avg=mean(weight), sd(weight), median(weight), IQR(weight)), 0)
Crabs2 %>% group_by(color,y) %>% summarise(round(avg=mean(weight), sd(weight), median(weight), IQR(weight)), 4)
Crabs2 %>% group_by(color,y) %>% summarise((avg=mean(weight),sd(weight),median(weight),IQR(weight)))
Crabs2 %>% group_by(color,y) %>% summarise(avg=mean(weight), sd(weight), median(weight), IQR(weight))
Crabs2 %>% group_by(color,y) %>% summarise(avg=mean(weight), sd(weight), median(weight), IQR(weight)) %>% row.names("color", "y", "avg", "sd", "median", "IQR")
Summary <- Crabs2 %>% group_by(color,y) %>% summarise(avg=mean(weight), sd(weight), median(weight), IQR(weight)) %>% row.names(Summary,"color", "y", "avg", "sd", "median", "IQR")
Crabs2 %>% group_by(color,y) %>% summarise(avg=mean(weight), sd(weight), median(weight), IQR(weight))
Crabs2 %>% group_by(color,y) %>% summarise(avg=mean(weight), sd(weight), median(weight), IQR(weight)) %>% rename_at(sd(weight)=sd)
Crabs2 %>% group_by(color,y) %>% summarise(avg=mean(weight), sd(weight), median(weight), IQR(weight)) %>% rename_at(sd(weight) = sd)
Crabs2 %>% group_by(color,y) %>% summarise(avg=mean(weight), sd(weight), median(weight), IQR(weight))
Tibble<-Crabs2 %>% group_by(color,y) %>% summarise(avg=mean(weight), sd(weight), median(weight), IQR(weight))
View(Tibble)
View(Tibble)
View(Tibble)
round(Tibble$avg, 4)
View(Tibble)
View(Tibble)
Tibble<-Crabs2 %>% group_by(color,y) %>% summarise(avg=mean(weight), sd(weight), median(weight), IQR(weight)) %>% mutate_if(is.numeric, round
Tibble<-Crabs2 %>% group_by(color,y) %>% summarise(avg=mean(weight), sd(weight), median(weight), IQR(weight)) %>% mutate_if(is.numeric, round)
Tibble<-Crabs2 %>% group_by(color,y) %>% summarise(avg=mean(weight), sd(weight), median(weight), IQR(weight)) %>% mutate_if(is.numeric, round)
View(Tibble)
View(Tibble)
Crabs2 %>% group_by(color,y) %>% summarise(avg=mean(weight), sd(weight), median(weight), IQR(weight)) %>% mutate_if(is.numeric, round)
Tibble<-Crabs2 %>% group_by(color,y) %>% summarise(avg=mean(weight), sd(weight), median(weight), IQR(weight)) %>% mutate_if(is.numeric, round) %>% colnames(Tibble,-(weight))
Crabs2 %>% group_by(color,y) %>% summarise(avg=mean(weight), sd(weight), median(weight), IQR(weight)) %>% mutate_if(is.numeric, round)
5. Recreate the set of side-by-side bar plots below. Write text comments for any patterns you see.
```{r, echo=FALSE}
g <- ggplot(data=Crabs2, aes(x = color))
g + geom_bar((aes(fill = as.factor(y))), position = "dodge") + labs(x = "Female Crab Spine Condition") + theme(legend.title = element_blank()) + facet_grid(~spine) + theme(axis.text.x = element_text(angle=45))
```
+ I noticed in this plot that a lot more crabs have both worn or broken spines. Most of the crabs that have worn or broken spines have at least 1 sattelite. Not many crabs have one worn or one broken spine.
Crabs2 %>% group_by(color,y) %>% summarise(avg=mean(weight), sd=sd(weight), median=median(weight), IQR=IQR(weight)) %>% mutate_if(is.numeric, round)
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color))
g + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color, shape=y))
g + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color, shape=y))
g + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color, shape=y))
g + geom_point() + geom_smooth(formula = x~y, method=lm, color="blue") + ggtitle("Weight vs Width")
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color, shape=y))
g + geom_point() + geom_smooth(formula = x~y, method=lm, se=false, color="blue") + ggtitle("Weight vs Width")
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color, shape=y))
g + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color, shape=y))
g + geom_point() + geom_smooth(method=lm, se=FALSE, fullrange=TRUE, color="blue") + ggtitle("Weight vs Width")
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color, shape=y))
g + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
F<-ggplot(Crabs2, aes(x=weight, y=width, color=color, shape=y))
F + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
F<-ggplot(Crabs2, aes(x=weight, y=width, color=color, shape=y))
F + geom_point() + geom_smooth(method=lm, color="blue", se=FALSE ) + ggtitle("Weight vs Width")
F<-ggplot(Crabs2, aes(x=weight, y=width, color=color, shape=y))
F + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
F<-ggplot(Crabs2, aes(x=weight, y=width, shape=y))
F + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
F<-ggplot(Crabs2, aes(x=weight, y=width, color=color, shape=y))
F + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
g<-ggplot(Crabs2, aes(x=weight, y=width, color=color, shape=y))
g + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
F<-ggplot(Crabs2, aes(x=weight, y=width, color=color, shape=y))
F + geom_point() + geom_smooth(method=glm, color="blue") + ggtitle("Weight vs Width")
F<-ggplot(Crabs2, aes(x=weight, y=width, color=color, shape=y))
F + geom_point() + geom_smooth(y~log(x), method=lm, color="blue") + ggtitle("Weight vs Width")
F<-ggplot(Crabs2, aes(x=weight, y=width, color=color, shape=y))
F + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
F<-ggplot(Crabs2, aes(x=weight, y=width, color=color, shape=y))
F + geom_point() + stat_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
F<-ggplot(Crabs2, aes(x=weight, y=width, color=color, shape=y))
F + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
F<-ggplot(Crabs2, aes(x=weight, y=width, color=color, shape=y))
F + geom_point() + geom_smooth(color="blue") + ggtitle("Weight vs Width")
F<-ggplot(Crabs2, aes(x=weight, y=width, color=color, shape=y))
F + geom_point() + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
F<-ggplot(Crabs2, aes(color=color, shape=y))
library(ggplot2)
F<-ggplot(Crabs2, aes(color=color, shape=y))
Crabs2<- Crabs %>% mutate(color = if_else(color==2, "light", if_else(color==3, "medium", if_else(color==4, "dark", "darker")))) %>% mutate(spine = if_else(spine==1, "Both Good", if_else(spine==2, "One worn/Broken", "Both worn/Broken"))) %>% mutate(y = if_else(y==1, "At least 1 sattelite", "No Satellite"))
library(readr)
library(dplyr)
library(knitr)
library(magrittr)
Crabs<-read.table("crabs.txt", header = TRUE)
Crabs2<- Crabs %>% mutate(color = if_else(color==2, "light", if_else(color==3, "medium", if_else(color==4, "dark", "darker")))) %>% mutate(spine = if_else(spine==1, "Both Good", if_else(spine==2, "One worn/Broken", "Both worn/Broken"))) %>% mutate(y = if_else(y==1, "At least 1 sattelite", "No Satellite"))
F<-ggplot(Crabs2, aes(color=color, shape=y))
F + geom_point(aes(x=weight, y=width)) + geom_smooth(method=lm, color="blue") + ggtitle("Weight vs Width")
F<-ggplot(Crabs2, aes(color=color, shape=y))
F + geom_point(aes(x=weight, y=width)) + geom_smooth(aes(x=weight, y=width),method=lm, color="blue") + ggtitle("Weight vs Width")
F<-ggplot(Crabs2, aes(color=color, shape=y))
F + geom_point() + geom_smooth(aes(x=weight, y=width),method=lm, color="blue") + ggtitle("Weight vs Width")
words<-c("first", "second", "third", "fourth", "fifth")
data<-runif(5)
for(i in 1:5){
print(paste0("The", words[i], "data point is", data[i], "."))
}
for(i in 1:5){
print(paste0("The", words[i], " data point is ", data[i], "."))
}
for(i in 1:5){
print(paste0("The" , words[i], " data point is ", data[i], "."))
}
for(i in 1:5){
print(paste0("The",  words[i], " data point is ", data[i], "."))
}
words<-c("first", "second", "third", "fourth", "fifth")
data<-runif(5)
for(i in 1:5){
print(paste0("The ",  words[i], " data point is ", data[i], "."))
}
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_Rmd/2021-9-14-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
setwd("~/Desktop/R Programming/git-project/MBrown1994.github.io/_Rmd")
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_Rmd/2021-9-22-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
knitr::opts_chunk$set(fig.path = "../_posts/")
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_Rmd/2021-9-22-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_Rmd/2021-9-22-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
("~/Desktop/R Programming/git-project/MBrown1994.github.io/_Rmd/2021-9-22-Second-Blog-Post.Rmd",
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_Rmd/2021-9-22-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_Rmd/2021-9-22-Second-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
Image <- plot(iris)
View(Image)
View(plot(iris))
plot(iris)
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_posts/2021-10-4-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_posts/2021-10-4-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_posts/2021-10-4-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_posts/2021-10-4-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_posts/2021-10-4-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
setwd("~/Desktop/R Programming/git-project/MBrown1994.github.io/_posts")
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_posts/2021-10-4-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_posts/2021-10-4-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_posts/2021-10-4-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_posts/2021-10-4-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_posts/2021-10-4-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_posts/2021-10-4-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_posts/2021-10-4-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_posts/2021-10-4-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_posts/2021-10-4-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_posts/2021-10-4-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
library(rmarkdown)
rmarkdown::render("~/Desktop/R Programming/git-project/MBrown1994.github.io/_posts/2021-10-4-Blog-Post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(html_preview=FALSE, keep_html=FALSE)
)
